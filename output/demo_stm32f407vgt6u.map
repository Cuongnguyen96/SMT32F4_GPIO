
Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x00000000         0x00040000         xr
RAM              0x20000000         0x00020000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00000000                __ROM_BASE = 0x0
                0x00040000                __ROM_SIZE = 0x40000
                0x20000000                __RAM_BASE = 0x20000000
                0x00020000                __RAM_SIZE = 0x20000
                0x00000400                __STACK_SIZE = 0x400
                0x00000c00                __HEAP_SIZE = 0xc00

.text           0x00000000      0x1f8
 *(.vectors)
 .vectors       0x00000000       0xc0 ./output/startup_ARMCM4.o
                0x00000000                __Vectors
 *(.text*)
 .text          0x000000c0      0x130 ./output/main.o
                0x000000c0                Reserved_IRQHandler
                0x000000c6                NMI_Handler
                0x000000cc                HardFault_Handler
                0x000000d2                SVC_Handler
                0x000000d8                PendSV_Handler
                0x000000de                SysTick_Handler
                0x000000e4                delay
                0x00000122                enable_clock
                0x00000150                init_pin
                0x0000017c                led_on
                0x000001a0                led_off
                0x000001c8                main
 .text          0x000001f0        0x8 ./output/startup_ARMCM4.o
                0x000001f0                Reset_Handler
                0x000001f4                UART1_IRQHandler
                0x000001f4                FLEXRAY_IRQHandler
                0x000001f4                UART0_IRQHandler
                0x000001f4                UsageFault_Handler
                0x000001f4                MCIB_IRQHandler
                0x000001f4                AACI_IRQHandler
                0x000001f4                CAN_IRQHandler
                0x000001f4                CHLCD_IRQHandler
                0x000001f4                USBDC_IRQHandler
                0x000001f4                USBHC_IRQHandler
                0x000001f4                RTC_IRQHandler
                0x000001f4                DebugMon_Handler
                0x000001f4                SPI_IRQHandler
                0x000001f4                UART2_IRQHandler
                0x000001f4                UART4_IRQHandler
                0x000001f4                Default_Handler
                0x000001f4                CLCD_IRQHandler
                0x000001f4                TIM0_IRQHandler
                0x000001f4                I2C_IRQHandler
                0x000001f4                MemManage_Handler
                0x000001f4                WDT_IRQHandler
                0x000001f4                TIM2_IRQHandler
                0x000001f4                LIN_IRQHandler
                0x000001f4                CPU_CLCD_IRQHandler
                0x000001f4                BusFault_Handler
                0x000001f4                UART3_IRQHandler
                0x000001f4                MCIA_IRQHandler
                0x000001f4                ENET_IRQHandler
 *(.init)
 *(.fini)
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
 *(.rodata*)
 *(.eh_frame*)

.glue_7         0x000001f8        0x0
 .glue_7        0x000001f8        0x0 linker stubs

.glue_7t        0x000001f8        0x0
 .glue_7t       0x000001f8        0x0 linker stubs

.vfp11_veneer   0x000001f8        0x0
 .vfp11_veneer  0x000001f8        0x0 linker stubs

.v4_bx          0x000001f8        0x0
 .v4_bx         0x000001f8        0x0 linker stubs

.iplt           0x000001f8        0x0
 .iplt          0x000001f8        0x0 ./output/main.o

.rel.dyn        0x000001f8        0x0
 .rel.iplt      0x000001f8        0x0 ./output/main.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x000001f8                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x000001f8                __exidx_end = .

.copy.table     0x000001f8        0xc
                0x000001f8                . = ALIGN (0x4)
                0x000001f8                __copy_table_start__ = .
                0x000001f8        0x4 LONG 0x204 __etext
                0x000001fc        0x4 LONG 0x20000000 __data_start__
                0x00000200        0x4 LONG 0x0 (__data_end__ - __data_start__)
                0x00000204                __copy_table_end__ = .

.zero.table     0x00000204        0x0
                0x00000204                . = ALIGN (0x4)
                0x00000204                __zero_table_start__ = .
                0x00000204                __zero_table_end__ = .
                0x00000204                __etext = ALIGN (0x4)

.data           0x20000000        0x0 load address 0x00000204
                0x20000000                __data_start__ = .
 *(vtable)
 *(.data)
 .data          0x20000000        0x0 ./output/main.o
 .data          0x20000000        0x0 ./output/startup_ARMCM4.o
 *(.data.*)
                0x20000000                . = ALIGN (0x4)
                [!provide]                PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                PROVIDE (__preinit_array_end = .)
                0x20000000                . = ALIGN (0x4)
                [!provide]                PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
                [!provide]                PROVIDE (__init_array_end = .)
                0x20000000                . = ALIGN (0x4)
                [!provide]                PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array)
                [!provide]                PROVIDE (__fini_array_end = .)
 *(.jcr*)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __data_end__ = .

.igot.plt       0x20000000        0x0 load address 0x00000204
 .igot.plt      0x20000000        0x0 ./output/main.o

.bss            0x20000000        0x0
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_start__ = .
 *(.bss)
 .bss           0x20000000        0x0 ./output/main.o
 .bss           0x20000000        0x0 ./output/startup_ARMCM4.o
 *(.bss.*)
 *(COMMON)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_end__ = .

.heap           0x20000000     0x1800
                0x20000000                . = ALIGN (0x8)
                0x20000000                __end__ = .
                [!provide]                PROVIDE (end = .)
                0x20000c00                . = (. + __HEAP_SIZE)
 *fill*         0x20000000      0xc00 
                0x20000c00                . = ALIGN (0x8)
                0x20000c00                __HeapLimit = .
 .heap          0x20000c00      0xc00 ./output/startup_ARMCM4.o
                0x20000c00                __HeapBase

.stack          0x2001fc00      0x800
                0x2001fc00                . = ALIGN (0x8)
                0x2001fc00                __StackLimit = .
                0x20020000                . = (. + __STACK_SIZE)
 *fill*         0x2001fc00      0x400 
                0x20020000                . = ALIGN (0x8)
                0x20020000                __StackTop = .
 .stack         0x20020000      0x400 ./output/startup_ARMCM4.o
                [!provide]                PROVIDE (__stack = __StackTop)
                0x00000001                ASSERT ((__StackLimit >= __HeapLimit), region RAM overflowed with stack)
LOAD ./output/main.o
LOAD ./output/startup_ARMCM4.o
OUTPUT(./output/demo_stm32f407vgt6u.elf elf32-littlearm)

.debug_info     0x00000000      0x18c
 .debug_info    0x00000000      0x18c ./output/main.o

.debug_abbrev   0x00000000       0xbc
 .debug_abbrev  0x00000000       0xbc ./output/main.o

.debug_aranges  0x00000000       0x20
 .debug_aranges
                0x00000000       0x20 ./output/main.o

.debug_line     0x00000000       0xf4
 .debug_line    0x00000000       0xf4 ./output/main.o

.debug_str      0x00000000      0x16d
 .debug_str     0x00000000      0x16d ./output/main.o

.comment        0x00000000       0x75
 .comment       0x00000000       0x75 ./output/main.o
                                 0x76 (size before relaxing)

.ARM.attributes
                0x00000000       0x2b
 .ARM.attributes
                0x00000000       0x2d ./output/main.o
 .ARM.attributes
                0x0000002d       0x1b ./output/startup_ARMCM4.o

.debug_frame    0x00000000      0x184
 .debug_frame   0x00000000      0x184 ./output/main.o
